I would like you to generate a very organized, simple but extremely advanced Discord Administration Bot in Python using discord.py (latest supported version). The bot should be modular, with all commands neatly structured into cogs for easy scalability and readability.

The focus is on 25 advanced administration slash commands that allow high-level server management and automation. Additionally, there are 3 special administration commands that must be included with detailed functionality:

â¸»

ðŸ”¹ Special Commands (MUST-HAVE)
	1.	/echo <message> <format_type> <OPTIONAL: message_id>
	â€¢	Parameters:
	â€¢	<message> â†’ The content the bot will send.
	â€¢	<format_type> â†’ Either "Plain Text" or "Embed".
	â€¢	<message_id> (optional) â†’ If provided, the bot replies to that specific message.
	â€¢	Behavior: The bot echoes the provided message in the selected format. If "Embed" is chosen, display it inside a styled embed message. If message_id is provided, the bot replies directly to that message.
	2.	/vcmassmove <vc_channel>
	â€¢	Parameters:
	â€¢	<vc_channel> â†’ The chosen voice channel.
	â€¢	Behavior: Removes all users currently in that VC channel (disconnects them, but does not kick them from the server).
	3.	/masslockdown <multiple_channels>
	â€¢	Parameters:
	â€¢	<multiple_channels> â†’ A list of text channels to lock down.
	â€¢	Behavior: Applies a lockdown (disables @everyoneâ€™s messaging permissions) across all selected channels. A toggle/unlock option must also exist to restore permissions.

â¸»

ðŸ”¹ 25 Advanced Normal Administration Slash Commands

The bot should include the following administration commands, all as slash commands with proper permissions checks (Administrator or Manage Server roles only):
	1.	/ban <user> <reason> â†’ Bans a user with a logged reason.
	2.	/unban <user> â†’ Unbans a user by ID or username.
	3.	/kick <user> <reason> â†’ Kicks a user with a logged reason.
	4.	/mute <user> <duration> <reason> â†’ Temporarily mutes a user (time-based mute).
	5.	/unmute <user> â†’ Removes mute from a user.
	6.	/warn <user> <reason> â†’ Issues a warning to a user, stored in a database.
	7.	/warnings <user> â†’ Views all warnings for a user.
	8.	/clearwarnings <user> â†’ Clears all warnings of a user.
	9.	/slowmode <channel> <duration> â†’ Enables slowmode in a channel for a specified duration.
	10.	/purge <amount> â†’ Bulk deletes a chosen number of messages.
	11.	/nick <user> <nickname> â†’ Changes a userâ€™s nickname.
	12.	/resetnick <user> â†’ Resets a userâ€™s nickname.
	13.	/move <user> <vc_channel> â†’ Moves a user to a specified VC.
	14.	/roleadd <user> <role> â†’ Adds a role to a user.
	15.	/roleremove <user> <role> â†’ Removes a role from a user.
	16.	/roleall <role> â†’ Gives a specific role to every member in the server.
	17.	/removeroleall <role> â†’ Removes a specific role from every member in the server.
	18.	/serverinfo â†’ Displays detailed server information (owner, member count, boost level, roles, channels, etc.).
	19.	/userinfo <user> â†’ Displays detailed information about a specific user.
	20.	/avatar <user> â†’ Shows the avatar of a user in high resolution.
	21.	/lock <channel> â†’ Locks a single channel (disables messages).
	22.	/unlock <channel> â†’ Unlocks a single channel.
	23.	/poll <question> <options> â†’ Creates a poll with reactions for voting.
	24.	/announce <channel> <message> â†’ Sends a styled announcement embed to the selected channel.
	25.	/servermute <user> â†’ Server-mutes a user across all VCs.

â¸»

ðŸ”¹ Requirements & Specifications
	â€¢	All commands should be structured into separate cogs (e.g., moderation, utility, server management, special).
	â€¢	Slash commands must use the new discord.app_commands system.
	â€¢	Permission checks (e.g., only admins can run certain commands).
	â€¢	Logging system: All moderation actions should be logged in a configurable mod-log channel.
	â€¢	Error handling: Clear error messages for missing permissions, invalid inputs, or wrong usage.
	â€¢	Code must be clean, efficient, and follow Python best practices (PEP8).

â¸»

ðŸ”¹ Final Goal

I want a fully functional, simple yet advanced Administration Bot with 25 advanced normal slash commands + the 3 special commands described above, coded in a highly organized way with cogs. The result should be scalable, professional, and production-ready.
